// Code generated by MockGen. DO NOT EDIT.
// Source: payload_generator_interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	types "passvault/pkg/types"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockPayloadGeneratorInterface is a mock of PayloadGeneratorInterface interface.
type MockPayloadGeneratorInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPayloadGeneratorInterfaceMockRecorder
}

// MockPayloadGeneratorInterfaceMockRecorder is the mock recorder for MockPayloadGeneratorInterface.
type MockPayloadGeneratorInterfaceMockRecorder struct {
	mock *MockPayloadGeneratorInterface
}

// NewMockPayloadGeneratorInterface creates a new mock instance.
func NewMockPayloadGeneratorInterface(ctrl *gomock.Controller) *MockPayloadGeneratorInterface {
	mock := &MockPayloadGeneratorInterface{ctrl: ctrl}
	mock.recorder = &MockPayloadGeneratorInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPayloadGeneratorInterface) EXPECT() *MockPayloadGeneratorInterfaceMockRecorder {
	return m.recorder
}

// GeneratePayload mocks base method.
func (m *MockPayloadGeneratorInterface) GeneratePayload(duration time.Duration) (*types.Payload, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GeneratePayload", duration)
	ret0, _ := ret[0].(*types.Payload)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GeneratePayload indicates an expected call of GeneratePayload.
func (mr *MockPayloadGeneratorInterfaceMockRecorder) GeneratePayload(duration interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GeneratePayload", reflect.TypeOf((*MockPayloadGeneratorInterface)(nil).GeneratePayload), duration)
}
